image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/docker-runner:latest

variables:
  TAG_FOR_develop: develop
  TAG_FOR_staging: staging
  TAG_FOR_production: production
  CONTAINER: ${CI_REGISTRY}/${CI_PROJECT_PATH}
  CONTAINER_TEST_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:build-$CI_COMMIT_REF_SLUG
  RELEASE_TAG_VARIABLE: TAG_FOR_${CI_COMMIT_REF_SLUG}
  DOCKER_BUILDKIT: 1
  # CONTAINER_RELEASE_IMAGE - will be set in before_script

# Stages of CI
stages:
  - build
  - lint
  - release
  - deploy
  - notify
before_script:
  ## Set dynamic variables
  - echo Using RELEASE_TAG_VARIABLE=$RELEASE_TAG_VARIABLE
  - export RELEASE_TAG=$(eval echo "\$$RELEASE_TAG_VARIABLE")
  - echo slug=${CI_COMMIT_REF_SLUG} RELEASE_TAG=$RELEASE_TAG
  - export CONTAINER_RELEASE_IMAGE=$ECR_REGISTRY/xpectum-${CI_PROJECT_NAME}:${RELEASE_TAG}

# Run build
build:image:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${CI_REGISTRY}
    - docker pull $CONTAINER_TEST_IMAGE || echo "New Image"
    - docker build -t $CONTAINER_TEST_IMAGE --build-arg git_branch=$CI_COMMIT_REF_NAME --build-arg git_hash=$CI_COMMIT_SHORT_SHA .
    - docker push $CONTAINER_TEST_IMAGE

# Lint image
lint:image:
  stage: lint
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${CI_REGISTRY}
    - docker run --rm $CONTAINER_TEST_IMAGE npm run lint

# Release docker image
release:image:
  stage: release
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${CI_REGISTRY}
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - eval $(aws ecr get-login --no-include-email)
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - develop
    - staging
    - production

# Send info to server
deploy_develop:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-ecs:latest
  stage: deploy
  script:
    - ecs update-task-definition
  only:
    - develop
  environment:
    name: develop

# Send info to server
deploy_staging:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-ecs:latest
  stage: deploy
  script:
    - ecs update-task-definition
  only:
    - staging
  environment:
    name: staging

# Send info to server
deploy_production:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-ecs:latest
  stage: deploy
  script:
    - ecs update-task-definition
  only:
    - production
  environment:
    name: production
